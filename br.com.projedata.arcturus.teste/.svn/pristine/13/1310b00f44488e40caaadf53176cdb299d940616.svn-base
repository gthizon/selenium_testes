package br.com.projedata.arcturus.teste.testes;

import static br.com.projedata.arcturus.teste.webelements.Parc001Elementos.botaoCarregarImagem;
import static br.com.projedata.arcturus.teste.webelements.Parc001Elementos.botaoRemoverImagem;
import static br.com.projedata.arcturus.teste.webelements.Parc001Elementos.campoCodigoArc001;
import static br.com.projedata.arcturus.teste.webelements.Parc001Elementos.imagemCarregada;
import static br.com.projedata.arcturus.teste.webelements.Parc107Elementos.campoIdRotina;
import static br.com.projedata.arcturus.teste.webelements.Pger001Elementos.barraRolagemProximoRelatorio;
import static br.com.projedata.arcturus.teste.webelements.Pger001Elementos.barraRolagemProximoRelatorioDesabilitada;
import static br.com.projedata.arcturus.teste.webelements.Pger001Elementos.botaoExecutarHabilitado;
import static br.com.projedata.arcturus.teste.webelements.Pger001Elementos.campoCodigoRelatorio;

import java.awt.AWTException;
import java.io.IOException;
import java.util.ArrayList;

import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import br.com.projedata.arcturus.teste.metodosgenericos.AtualizadorMetodos;
import br.com.projedata.arcturus.teste.metodosgenericos.LoginMetodos;
import br.com.projedata.arcturus.teste.recursos.Rotina;
import br.com.projedata.arcturus.teste.recursos.TesteGenerico;

public class teste extends TesteGenerico {

	public static String numeroAtualizacao;
	public static String numeroAtualizacaoDependente;
	private String versaoAtualizacaoLancada;
	private static String idDependente;
	private static String mensagemAtualizacaoComOsVinculada;
	String anexo1Linux = "Anexo1.txt";
	String anexo2Linux = "processo_testes'@#$~^áà.png";
	String anexo1Windows = "\\\\arquivos.prj\\qualidade\\Plano de Testes\\Plano_de_Testes.pdf";
	String anexo2Windows = "\\\\arquivos.prj\\qualidade\\Diversos\\processo_testes'@#$~^áà.png";
	String urlAdmin;

	Rotina rotina;
	String elementoFocado;
	LoginMetodos login;
	AtualizadorMetodos atualiza;

	@Parameters(value = { "login", "senha", "base" })
	@Test(testName = "id: 33 - Verificar se esta sendo possivel limpar o valor da combobox selecionando valor em branco")
	public void login(String usuario, String senha, String base)
			throws AWTException, InterruptedException, InvalidPasswordException, IOException {
		login = new LoginMetodos(this);
		rotina = new Rotina(webDriver);
		login.logar(usuario, senha, base);
		rotina.selecionarRotina("arc001", "p");
		acao.clicarNoElemento(campoCodigoArc001);
		rotina.aguardarProcessarRotina();
		acao.clicarNoElemento(rotina.botaoLimparConsulta);
		rotina.aguardarProcessarRotina();
		acao.escreverNoElemento(campoCodigoArc001, "2284769926");
		acao.clicarNoElemento(rotina.botaoConsultar);
		rotina.aguardarProcessarRotina();
		String barra = teclado.retornarCaracterBarra();
		String anexo1Linux = "/projedata/anexos/peixe.png";
		acao.posicionarFocoNoElemento(campoCodigoArc001);
		acao.clicarNoElemento(botaoCarregarImagem);
		String SO = System.getProperty("os.name").toLowerCase();
		if (SO.contains("win")) {
			rotina.uploadFilesWindows(anexo1Windows);
			espera.aguardarElementoEstarVisivel(imagemCarregada);
		} else if (SO.contains("linux")) {
			rotina.uploadFilesLinux(anexo1Linux);
			espera.aguardarElementoEstarVisivel(imagemCarregada);

		}
		rotina.aguardarProcessarRotina();
		espera.aguardarElementoEstarVisivel(imagemCarregada);
		teclado.pressionarTeclaDeControle(Keys.F10);
		espera.aguardarElementoEstarVisivel(msg.mensagemRegistrosAlterados);
		msg.fecharMensagemNotificacao();
		espera.aguardarElementoDesaparecer(msg.mensagemRegistrosAlterados);

		acao.clicarNoElemento(imagemCarregada);
		espera.aguardarElementoEstarVisivel(botaoRemoverImagem);
		rotina.fecharTelaAnexos();
		acao.clicarNoElemento(botaoRemoverImagem);
		rotina.aguardarProcessarRotina();
		teclado.pressionarTeclaDeControle(Keys.F10);
		espera.aguardarElementoEstarVisivel(msg.mensagemRegistrosAlterados);
		espera.aguardarElementoDesaparecer(imagemCarregada);
	
	}
		



	public void selecionarRelatorioParaEdicao(String relatorio) {
		rotina = new Rotina(webDriver);
		rotina.aguardarProcessarRotina();
		acao.clicarNoElemento(campoCodigoRelatorio, 0);
		rotina.aguardarProcessarRotina();
		rotina.limparCampoERealizarNovaConsulta();
		int posicao = 0;
		while (!rotina.buscarElementos(campoCodigoRelatorio).get(posicao).getAttribute("value").equals(relatorio)) {
			if (rotina.buscarElementos(barraRolagemProximoRelatorioDesabilitada).size() == 0) {
				acao.clicarNoElemento(barraRolagemProximoRelatorio);
				rotina.aguardarProcessarRotina();
				posicao = -1;
			}
			posicao++;
		}
		acao.clicarNoElemento(campoCodigoRelatorio, posicao);
		rotina.aguardarProcessarRotina();
	}
}
