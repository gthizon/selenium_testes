package br.com.projedata.arcturus.teste.testes;

import static br.com.projedata.arcturus.teste.webelements.Teste02Elementos.*;

import org.openqa.selenium.Keys;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import br.com.projedata.arcturus.teste.metodosgenericos.AtualizadorMetodos;
import br.com.projedata.arcturus.teste.metodosgenericos.ConstrutorTelasMetodos;
import br.com.projedata.arcturus.teste.metodosgenericos.LoginMetodos;
import br.com.projedata.arcturus.teste.recursos.TesteGenerico;

public class teste extends TesteGenerico {


	String elementoFocado;
	LoginMetodos login;
	AtualizadorMetodos atualiza;
	ConstrutorTelasMetodos metodosConstrutor;

	@Parameters(value = { "login", "senha", "base" })
	@Test(testName = "id: 47 - Verificar expansao de textArea" , enabled = true)
	public void textAreaExpansivel(String log, String senha, String base) {
		login = new LoginMetodos(this);
		login.logar(log, senha, base);
		rotina.selecionarRotina("teste02");
		String textArea = "teste teste teste teste teste teste teste teste teste teste teste"
				+ " teste teste teste teste teste teste teste teste teste teste teste teste teste "
				+ "teste teste teste teste teste teste teste teste teste teste teste teste teste teste teste"
				+ "teste teste teste teste teste teste teste teste teste teste teste teste teste teste teste";

		acao.clicarNoElemento(rotina.botaoLimparConsulta);
		acao.escreverNoElementoNaPosicao("arctesteCodigo", 0, "444");
		acao.clicarNoElemento(rotina.botaoConsultar);
		rotina.aguardarProcessarRotina();
		espera.aguardarElementoEstarDesabilitado("arctesteDescricaoLista");
		rotina.aguardarProcessarRotina();
		String tamanhoInicial = acao.localizarElemento("c_99997").getCssValue("height");
		acao.escreverNoElemento("c_99997", textArea);
		teclado.pressionarTeclaDeControle(Keys.TAB);
		String tamanhoAlterado = acao.localizarElemento("c_99997").getCssValue("height");
		testar.passouSeValorNaoContem(tamanhoInicial, tamanhoAlterado);
		teclado.pressionarConjuntoDeTeclasDeControle(Keys.SHIFT, Keys.F4);
		espera.aguardarElementoEstarVisivel(msg.simConfirmacao);
		acao.clicarNoElemento(msg.naoConfirmacao);
		espera.aguardarElementoDesaparecer(msg.simConfirmacao);
		rotina.aguardarProcessarRotina();
	}

	@Test(testName = "id: 48 - Testar passagem de foco com o tab pelos campos da tabela dinamica.", dependsOnMethods = {
			"textAreaExpansivel" })
	public void testarPassagemDeFocoTabelaDinamica() {
		rotina.selecionarRotina("teste02");
		rotina.limparCampoERealizarNovaConsulta();
		acao.clicarNoElemento("c_99998");
		teclado.pressionarTeclaDeControle(Keys.TAB);
		teclado.pressionarTeclaDeControle(Keys.TAB);
		teclado.pressionarTeclaDeControle(Keys.TAB);
		testar.passouSeElementoFocadoFor("c_99995");
		teclado.pressionarTeclaDeControle(Keys.TAB);
		testar.passouSeElementoFocadoFor("c_99999");
		sairPortal();

	}
}
