package br.com.projedata.arcturus.teste.testes;

import static br.com.projedata.arcturus.teste.webelements.ConstrutorTelasElementos.botaoAbrirLovImagem;
import static br.com.projedata.arcturus.teste.webelements.ConstrutorTelasElementos.imagemNaLov;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.BotaoCarregarLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoComandoExibicaoLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoComandoListagemLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoIdLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoNomeLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoTipoImagemLov;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.campoTipoLista;
import static br.com.projedata.arcturus.teste.webelements.Parc003Elementos.*;

import org.openqa.selenium.Keys;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import br.com.projedata.arcturus.teste.metodosgenericos.LoginMetodos;
import br.com.projedata.arcturus.teste.metodosgenericos.Pger001Metodos;
import br.com.projedata.arcturus.teste.recursos.Rotina;
import br.com.projedata.arcturus.teste.recursos.TesteGenerico;
import br.com.projedata.arcturus.teste.webelements.AtualizadorElementos;

public class TesteParc003 extends TesteGenerico {

	LoginMetodos login;
	Rotina rotina;
	AtualizadorElementos atualizador;
	Pger001Metodos ger001;
	String codigoAgendamento;

	@Parameters(value = { "login", "senha", "base" })
	@Test(testName = "id: 1 - Abrir Parc003")
	public void abrirParc003(String usuario, String senha, String base) {
		rotina = new Rotina(webDriver);
		login = new LoginMetodos(this);
		login.logar(usuario, senha, base);
		rotina.selecionarRotina("arc003");
	}

	@Test(testName = "id: 102 - Testar lov com imagem", dependsOnMethods = { "abrirParc003" }, enabled = true)
	public void testarLovComImagem() {
		rotina.selecionarRotina("teste015");
		acao.clicarNoElemento(botaoAbrirLovImagem);
		espera.aguardarElementoEstarVisivel(rotina.lov);
		acao.escreverNoElemento(rotina.filtrarLov, "305");
		espera.aguardarElementoEstarVisivel(imagemNaLov);
		acao.clicarNoElemento(rotina.fecharLov);
		espera.aguardarElementoDesaparecer(rotina.lov);
		rotina.fecharRotina("teste015");
	}

	@Test(testName = "id: 102 - Selecionar a lov e desabilitar o tipo imagem e verificar se nao sera exibida", dependsOnMethods = {
			"testarLovComImagem" }, enabled = true)
	public void desabilitarTipoImagemDaLov() {
		acao.clicarNoElemento(rotina.botaoLimparConsulta);
		rotina.aguardarProcessarRotina();
		acao.escreverNoElemento(campoIdLista, "921");
		acao.clicarNoElemento(rotina.botaoConsultar);
		rotina.aguardarProcessarRotina();
		acao.clicarNoElemento(campoTipoImagemLov);
		rotina.salvarEAguardarMensagemRegistrosAlterados();
		rotina.selecionarRotina("teste015");
		acao.clicarNoElemento(botaoAbrirLovImagem);
		espera.aguardarElementoEstarVisivel(rotina.lov);
		acao.escreverNoElemento(rotina.filtrarLov, "305");
		espera.aguardarElementoNaoEstarVisivel(imagemNaLov);
		acao.clicarNoElemento(rotina.fecharLov);
		espera.aguardarElementoDesaparecer(rotina.lov);
		rotina.fecharRotina("teste015");
		acao.clicarNoElemento(campoTipoImagemLov);
		rotina.salvarEAguardarMensagemRegistrosAlterados();
	}

	@Test(testName = "id: 102 - Inserir nova lista", dependsOnMethods = { "desabilitarTipoImagemDaLov" }, enabled = true)
	public void inserirNovaLista() {
		rotina.aguardarProcessarRotina();
		rotina.limparCampoERealizarNovaConsulta();
		acao.clicarNoElemento(campoIdLista);
		rotina.aguardarProcessarRotina();
		teclado.pressionarTeclaDeControle(Keys.F6);
		rotina.aguardarProcessarRotina();
		acao.escreverNoElemento(campoNomeLista, "teste automacao");
		acao.selecionarNoElemento(campoTipoLista, "LOV");
		rotina.salvarEAguardarMensagemRegistrosAlterados();
		String sql = "SELECT codigo, descricao, particular, secreta FROM WKFATIVIDADE";
		acao.escreverNoElemento(campoComandoExibicaoLista, sql);
		acao.escreverNoElemento(campoComandoListagemLista, sql);
		rotina.salvarEAguardarMensagemRegistrosAlterados();
		acao.clicarNoElemento(BotaoCarregarLista);
		msg.aguardarMensagem("Valores carregados com sucesso!");
		teclado.pressionarTeclaDeControle(Keys.ESCAPE);
		msg.aguardarMensagemDesaparecer("Valores carregados com sucesso!");
		testar.passouSeAtributoDoElementoNaoForNulo(campoValorLista, "value");
	}

	@Test(testName = "id: 102 - Inserir nova lista", dependsOnMethods = { "inserirNovaLista" }, enabled = true)
	public void excluirLista() {
		acao.limpar(campoComandoExibicaoLista);
		acao.limpar(campoComandoListagemLista);
		acao.clicarNoElemento(campoValorLista, 0);
		rotina.aguardarProcessarRotina();
		while (!rotina.buscarElementos(campoValorLista, 0).getAttribute("value").isEmpty()) {
			teclado.pressionarConjuntoDeTeclasDeControle(Keys.SHIFT, Keys.F6);
			rotina.aguardarProcessarRotina();
		}
		rotina.salvarEAguardarMensagemRegistrosAlterados();
		acao.clicarNoElemento(campoIdLista);
		rotina.excluirESalvar();
	}

}
